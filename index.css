:root {
	--light-background: #e8e8e8;
	--light-background-error: #e8a8a8;
	--light-foreground: black;
	--light-selection: #005794;
	--light-ghost: darkgray;
	--dark-background: #282828;
	--dark-background-error: #682828;
	--dark-foreground: #f0f0f0;
	--dark-selection: #AAEEFF;
	--dark-ghost: lightgray;
	--active-io: #0072B2;
	--active-negate: #D55E00;
	--active-conjoin: #009E73;
	--active-disjoin: #E69F00;
	--passive-io: #003C75;
	--passive-negate: var(--active-negate);
	--passive-conjoin: #00532F;
	--passive-disjoin: #7D4600;

	--background: var(--light-background);
	--background-error: var(--light-background-error);
	--foreground: var(--light-foreground);
	--selection: var(--light-selection);
	--ghost: var(--light-ghost);

	--hud-border: gray;
	--hud-enabled: cornflowerblue;
	--font: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
	--font-mono: ui-monospace, Menlo, Monaco, "Cascadia Mono", "Segoe UI Mono", "Roboto Mono", "Oxygen Mono", "Ubuntu Monospace", "Source Code Pro", "Fira Mono", "Droid Sans Mono", "Courier New", monospace;
}

[data-mode=screenshot] > canvas {
	--background: var(--light-background);
	--background-error: var(--light-background-error);
	--foreground: var(--light-foreground);
	--selection: var(--light-selection);
	--ghost: var(--light-ghost);
}

[data-mode=screenshot].dark > canvas {
	--background: var(--dark-background);
	--background-error: var(--dark-background-error);
	--foreground: var(--dark-foreground);
	--selection: var(--dark-selection);
	--ghost: var(--dark-ghost);
	color-scheme: dark;
}

@media (prefers-color-scheme: dark) {
	:root {
		--background: var(--dark-background);
		--background-error: var(--dark-background-error);
		--foreground: var(--dark-foreground);
		--selection: var(--dark-selection);
		--ghost: var(--dark-ghost);
		color-scheme: dark;
	}
}

:root,
body,
canvas {
	width: 100%;
	height: 100%;
	margin: 0;
	touch-action: none;
	overflow: hidden;
	background: var(--background);
	font-family: var(--font);
}

textarea,
pre,
code {
	font-family: var(--font-mono);
}

.dragging {
	cursor: grabbing;
}

.hud {
	position: fixed;
	bottom: 0;
	left: 50%;
	max-width: 100%;
	width: max-content;
	transform: translate(-50%, 0);
	box-sizing: border-box;
	border: 0.1em var(--hud-border) solid;
	border-bottom: none;
	--border-radius: 0.5em;
	border-radius: var(--border-radius) var(--border-radius) 0 0;
	padding: 0.2em 1em;
	background: var(--background);
	color: var(--foreground);
	touch-action: none;
	display: none;
	flex-wrap: wrap;
	justify-content: center;
	gap: 0.8em;
}

:where([data-mode=normal], [data-mode=eval], [data-mode=automated], [data-mode=picking], [data-mode=selected], [data-mode=pasting]) .hud {
	display: flex;
}

.hud.floating {
	top: var(--top);
	bottom: auto;
	left: var(--left);
	max-width: 90%;
	max-height: 90%;
	transform: translate(-50%, -50%);
	border: 0.1em var(--hud-border) solid;
	border-radius: var(--border-radius);
	padding: 0.5em 1em;
}

.hud button,
dialog button.close {
	padding: 0.1em;
	border: 0.1em transparent solid;
	border-radius: 0.1em;
	background: transparent;
	box-sizing: content-box;
}

:focus-visible {
	outline: 1px var(--selection) solid;
	outline-offset: 1px;
}

.hud .active {
	border-color: var(--selection);
}

button svg {
	vertical-align: super;
}

.hud svg,
.hud-message,
.hud button,
dialog button.close {
	width: 1em;
	height: 1em;
}

.hud-message {
	display: inline-block;
	width: unset;
	min-width: 5em;
	text-align: center;
	line-height: 1rem;
	font-size: 0.8rem;
}

:where([data-mode=normal]) .enabled-if-normal,
:where([data-mode=eval]) .enabled-if-eval,
:where([data-mode=automated]) .enabled-if-automated,
:where([data-mode=picking]) .enabled-if-picking,
:where([data-mode=selected]) .enabled-if-selected,
:where([data-mode=pasting]) .enabled-if-pasting,
:where([data-mode=inert]) .enabled-if-inert,
:where([data-mode=screenshot]) .enabled-if-screenshot,
.enabled {
	color: var(--hud-enabled);
}

.show-if-normal,
.show-if-eval,
.show-if-automated,
.show-if-picking,
.show-if-selected,
.show-if-pasting,
.show-if-inert,
.show-if-screenshot,
.hud-paste {
	display: none;
}

:where([data-mode=normal]) .show-if-normal,
:where([data-mode=eval]) .show-if-eval,
:where([data-mode=automated]) .show-if-automated,
:where([data-mode=picking]) .show-if-picking,
:where([data-mode=selected]) .show-if-selected,
:where([data-mode=pasting]) .show-if-pasting,
:where([data-mode=inert]) .show-if-inert,
:where([data-mode=screenshot]) .show-if-screenshot,
.hud-group,
.used-clipboard:not([data-mode=eval]):not([data-mode=automated]):not([data-mode=picking]):not([data-mode=pasting]) .hud-paste {
	display: contents;
}

dialog {
	min-width: 25%;
	border: 0.1em var(--hud-border) solid;
	border-radius: 0.5em;
	padding: 1em;
	background: var(--background);
	color: var(--foreground);
	font-family: var(--font);
	display: grid;
	align-items: center;
	grid-template-columns: 1fr auto;
	gap: 1em;
}

dialog:not([open]) {
	display: none;
}

dialog .title {
	grid-row: 1;
	grid-column: 1;
	margin-block: 0;
}

dialog .close {
	grid-row: 1;
	grid-column: 2;
	justify-self: end;
}

dialog .body {
	grid-row: 2;
	grid-column: 1 / 3;
}

dialog .body :first-child {
	margin-block-start: 0;
}

dialog .body :last-child {
	margin-block-end: 0;
}

dialog .footer {
	grid-row: 3;
	grid-column: 1 / 3;
	display: flex;
	flex-wrap: wrap;
	justify-content: flex-end;
	gap: 0.25em;
}

dialog .footer.vertical {
	flex-direction: column;
}

storage-browser ul {
	list-style: none;
	padding: 0;
	display: grid;
	grid-template-columns: 1fr repeat(var(--buttons, 0), auto);
	gap: 0.25em;
}

storage-browser li {
	display: contents;
}

.full-width {
	width: 100%;
	resize: vertical;
}

label {
	display: block;
	margin-block: 0.25em;
}

p {
	max-width: 60ch;
}

fieldset {
	border: none;
	border-radius: 0.5em;
	margin-block: 1em;
	--padding: 1.5em;
	padding-inline: var(--padding);
}

fieldset > legend {
	margin-inline-start: calc(-1 * var(--padding));
}

.lineno::before {
	content: ' (line ';
}

.lineno::after {
	content: ')';
}

.line {
	margin-block: 0;
	margin-inline-start: 1em;
}

.taller {
	height: 7.5em;
}

:where(.monitor, .asserts) {
	min-width: 100%;
	border-collapse: collapse;
	table-layout: fixed;
	--border: 1px solid var(--foreground);
}

:where(.monitor, .asserts) th {
	border-block-end: var(--border);
}

:where(.monitor, .asserts) :where(th, td) {
	text-align: center;
	border-inline-start: var(--border);
}

:where(.monitor, .asserts) :where(th, td):first-child {
	border-inline-start: none;
}

:where(.monitor, .asserts):not([data-stable-only]) .stable {
	border-block-end: var(--border);
}

.monitor[data-stable-only] tbody tr:not(.stable) {
	display: none;
}

.monitor[data-high-contrast] td[data-v] {
	--border: 1px solid var(--background);
	background-color: var(--foreground);
	color: var(--background);
}

.asserts tr[data-e] {
	--background: var(--background-error);
	background-color: var(--background);
}

@media (pointer: coarse) {
	.hud {
		font-size: 1.5rem;
	}
}

@media (max-width: 24em) {
	.hud:not(.floating) {
		left: 0;
		transform: none;
		width: 100%;
		border: none;
		border-top: 0.1em var(--hud-border) solid;
		border-radius: 0;
	}

	.used-clipboard:not([data-mode=eval]):not([data-mode=automated]):not([data-mode=picking]):not([data-mode=pasting]) .hud {
		gap: 0.6em;
	}

	[data-mode=pasting] .hud {
		gap: 0.5em;
	}
}
